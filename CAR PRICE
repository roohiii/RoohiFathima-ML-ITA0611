import numpy as np  

import pandas as pd  

import matplotlib.pyplot as plt  

import seaborn as sns  

from sklearn.model_selection import train_test_split  

from sklearn.tree import DecisionTreeRegressor  

data = pd.read_csv("C:/Users/roohi/OneDrive/Desktop/Machine Learning/CarPrice.csv")  

data.head()  

data.shape  

data.isnull().sum()  

#So this dataset doesn’t have any null values, now let’s look at some of the other important insights to get   

#an idea of what kind of data we’re dealing with:  

data.info()  

data.describe()  

data.CarName.unique() 

sns.set_style("whitegrid")  

plt.figure(figsize=(15, 10))  

sns.distplot(data.price)  

plt.show()  

#Now let’s have a look at the correlation among all the features of this dataset:  

print(data.corr())  

plt.figure(figsize=(20, 15))  

correlations = data.corr()  

sns.heatmap(correlations, cmap="coolwarm", annot=True)  

plt.show()  

#Training a Car Price Prediction Model  

predict = "price" <class 'pandas.core.frame.DataFrame'> 

RangeIndex: 205 entries, 0 to 204 

Data columns (total 26 columns): 

#   Column            Non-Null Count  Dtype   

---  ------            --------------  -----   

0   car_ID            205 non-null    int64   

1   symboling         205 non-null    int64   

2   CarName           205 non-null    object  

3   fueltype          205 non-null    object  

4   aspiration        205 non-null    object  

5   doornumber        205 non-null    object  

6   carbody           205 non-null    object  

7   drivewheel        205 non-null    object  

8   enginelocation    205 non-null    object  

9   wheelbase         205 non-null    float64 

10  carlength         205 non-null    float64 

11  carwidth          205 non-null    float64 

12  carheight         205 non-null    float64 

13  curbweight        205 non-null    int64   

14  enginetype        205 non-null    object  

15  cylindernumber    205 non-null    object  

16  enginesize        205 non-null    int64   

17  fuelsystem        205 non-null    object  

18  boreratio         205 non-null    float64 

19  stroke            205 non-null    float64 

20  compressionratio  205 non-null    float64 

21  horsepower        205 non-null    int64   

22  peakrpm           205 non-null    int64   

23  citympg           205 non-null    int64   

24  highwaympg        205 non-null    int64   

25  price             205 non-null    float64 

dtypes: float64(8), int64(8), object(10) 

memory usage: 41.8+ KB 

data = data[["symboling", "wheelbase", "carlength",   

             "carwidth", "carheight", "curbweight",   

             "enginesize", "boreratio", "stroke",   

             "compressionratio", "horsepower", "peakrpm",   

             "citympg", "highwaympg", "price"]]  

x = np.array(data.drop([predict], 1))  

y = np.array(data[predict])  

from sklearn.model_selection import train_test_split  

xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.2)  

from sklearn.tree import DecisionTreeRegressor  

model = DecisionTreeRegressor()  

model.fit(xtrain, ytrain)  

predictions = model.predict(xtest)  

from sklearn.metrics import mean_absolute_error  

model.score(xtest, predictions) 
